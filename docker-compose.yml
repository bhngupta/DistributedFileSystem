services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - storage_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 80M

  controller:
    build:
      context: .
      dockerfile: controller/Dockerfile
    ports:
      - "${CONTROLLER_PORT}:${CONTROLLER_PORT}"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - CONTROLLER_HOST=${CONTROLLER_HOST}
      - CONTROLLER_PORT=${CONTROLLER_PORT}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - storage_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${CONTROLLER_PORT}/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  storage-node-1:
    build:
      context: .
      dockerfile: storage_node/Dockerfile
    ports:
      - "${STORAGE_NODE_1_PORT}:${STORAGE_NODE_1_PORT}"
    environment:
      - NODE_ID=1
      - CONTROLLER_URL=http://${CONTROLLER_HOST}:${CONTROLLER_PORT}
      - STORAGE_PATH=/data
      - NODE_PORT=${STORAGE_NODE_1_PORT}
    volumes:
      - storage_node_1:/data
    networks:
      - storage_network
    depends_on:
      controller:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 80M
        reservations:
          memory: 48M

  storage-node-2:
    build:
      context: .
      dockerfile: storage_node/Dockerfile
    ports:
      - "${STORAGE_NODE_2_PORT}:${STORAGE_NODE_2_PORT}"
    environment:
      - NODE_ID=2
      - CONTROLLER_URL=http://${CONTROLLER_HOST}:${CONTROLLER_PORT}
      - STORAGE_PATH=/data
      - NODE_PORT=${STORAGE_NODE_2_PORT}
    volumes:
      - storage_node_2:/data
    networks:
      - storage_network
    depends_on:
      controller:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 80M
        reservations:
          memory: 48M

  storage-node-3:
    build:
      context: .
      dockerfile: storage_node/Dockerfile
    ports:
      - "${STORAGE_NODE_3_PORT}:${STORAGE_NODE_3_PORT}"
    environment:
      - NODE_ID=3
      - CONTROLLER_URL=http://${CONTROLLER_HOST}:${CONTROLLER_PORT}
      - STORAGE_PATH=/data
      - NODE_PORT=${STORAGE_NODE_3_PORT}
    volumes:
      - storage_node_3:/data
    networks:
      - storage_network
    depends_on:
      controller:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 80M
        reservations:
          memory: 48M

  # Monitoring Stack
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana-dashboard.json:/var/lib/grafana/dashboards/storage-dashboard.json
      - ./monitoring/grafana-provisioning:/etc/grafana/provisioning
    networks:
      - storage_network
    depends_on:
      - db
      - controller

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=100m,uid=999,gid=999
  storage_node_1:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=100m,uid=1000,gid=1000
  storage_node_2:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=100m,uid=1000,gid=1000
  storage_node_3:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=100m,uid=1000,gid=1000
  grafana_data:

networks:
  storage_network:
    driver: bridge
